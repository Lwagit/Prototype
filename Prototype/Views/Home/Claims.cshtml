@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Claims Form</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background-color: #004d00; /* Dark green background color */
            color: white; /* Text color changed to white for better contrast */
            height: 100%; /* Ensure body height is full */
            padding-bottom: 50px; /* Adds padding at the bottom to avoid footer overlap */
        }

        .container {
            max-width: 600px; /* Restrict form width to make it more readable */
            margin-top: 20px; /* Add some space at the top */
        }

        .form-group {
            margin-bottom: 20px; /* Add space between form fields */
        }

        .form-control, .btn {
            background-color: #e6e6e6; /* Light background color for form controls */
            color: #000; /* Black text color for form controls */
        }

        .btn-primary {
            background-color: #007700; /* Darker green for submit button */
            border-color: #007700;
        }

            .btn-primary:hover {
                background-color: #005500; /* Even darker green on hover */
                border-color: #005500;
            }

        footer {
            text-align: center;
            width: 100%;
            background-color: #004d00;
            padding: 10px;
            border-top: 1px solid #e9ecef;
            color: #004d00; /* Dark green text color in the footer */
        }
    </style>
</head>
<body>

    <h2 class="align-content-center">Lecture's Claim Form</h2>
    <form id="claimsForm">
        <div class="form-group">
            <label for="hours">Number of hours:</label>
            <input type="number" class="form-control" id="hours" required>
        </div>
        <div class="form-group">
            <label for="programme">Programme:</label>
            <input type="text" class="form-control" id="programme" required>
        </div>
        <div class="form-group">
            <label for="moduleCode">Module Code:</label>
            <input type="text" class="form-control" id="moduleCode" required>
        </div>
        <div class="form-group">
            <label for="groups">Groups:</label>
            <input type="text" class="form-control" id="groups" required>
        </div>
        <div class="form-group">
            <label for="hourlyRate">Hourly Rate:</label>
            <input type="number" class="form-control" id="hourlyRate" required>
        </div>
        <div class="form-group">
            <label for="totalAmount">TOTAL AMOUNT:</label>
            <input type="number" class="form-control" id="totalAmount" required>
        </div>
        <div class="form-group">
            <label for="claimFile">Upload File:</label>
            <input type="file" id="claimFile" class="form-control">
        </div>

        <button type="submit" class="btn btn-primary">Add another Module?</button><br /><br />
        <button type="submit" class="btn btn-primary">Submit Claim</button>
    </form>
    <br />

    <footer>
        <p>Footer Content</p>
    </footer>

    <script>
        document.getElementById('claimsForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent the default form submission

            // Get form data
            const claim = {
                hours: document.getElementById('hours').value,
                programme: document.getElementById('programme').value,
                moduleCode: document.getElementById('moduleCode').value,
                groups: document.getElementById('groups').value,
                hourlyRate: document.getElementById('hourlyRate').value,
                totalAmount: document.getElementById('totalAmount').value
            };

            // Validate numeric values
            if (!claim.hours || !claim.hourlyRate || !claim.totalAmount) {
                alert("Please enter valid numeric values for hours, hourly rate, and total amount.");
                return; // Exit if validation fails
            }

            // Retrieve existing claims from localStorage
            let claims;
            try {
                claims = JSON.parse(localStorage.getItem('claims')) || []; // Default to empty array if no claims exist
            } catch (error) {
                alert("Error retrieving claims from local storage: " + error.message);
                return; // Exit if there's an error loading
            }

            // Add new claim to the array
            claims.push(claim);

            // Save updated claims array back to localStorage
            try {
                localStorage.setItem('claims', JSON.stringify(claims));
            } catch (error) {
                alert("Error saving claims to local storage: " + error.message);
                return; // Exit if there's an error saving
            }

            // Clear the form after submission
            document.getElementById('claimsForm').reset();
            alert("Claim submitted successfully!"); // Confirmation alert
        });
    </script>

</body>
</html>




